# Interactive Terraform/OpenTofu Deployment Pipeline

name: Terraform Infrastructure Deployment

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'production'
        type: choice
        options:
          - production
          - staging
      action:
        description: 'Terraform action to perform'
        required: true
        default: 'plan'
        type: choice
        options:
          - plan
          - apply
          - destroy
      auto_approve:
        description: 'Auto approve apply (use with caution)'
        required: false
        default: false
        type: boolean

env:
  GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  GCP_REGION: us-central1
  TOFU_VERSION: 1.6.2

jobs:
  terraform-plan:
    name: Terraform Plan
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./signaler/terraform
    outputs:
      plan_exitcode: ${{ steps.plan.outputs.exitcode }}
      plan_summary: ${{ steps.plan_summary.outputs.summary }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Install OpenTofu
        uses: opentofu/setup-opentofu@v1
        with:
          tofu_version: ${{ env.TOFU_VERSION }}

      - name: Initialize OpenTofu
        run: |
          tofu init -backend-config=backend.conf

      - name: Terraform Plan
        id: plan
        run: |
          tofu plan -var="project_id=${{ env.GCP_PROJECT_ID }}" -out=tfplan -detailed-exitcode || echo "exitcode=$?" >> $GITHUB_OUTPUT
        continue-on-error: true

      - name: Generate Plan Summary
        id: plan_summary
        if: steps.plan.outputs.exitcode == '2'
        run: |
          echo "summary<<EOF" >> $GITHUB_OUTPUT
          tofu show -no-color tfplan | grep -E "^  # |^  \+|^  -|^  ~" | head -50 >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Upload Plan
        if: steps.plan.outputs.exitcode == '2'
        uses: actions/upload-artifact@v4
        with:
          name: tfplan
          path: signaler/terraform/tfplan
          retention-days: 7

      - name: Comment Plan Summary
        if: steps.plan.outputs.exitcode == '2'
        uses: actions/github-script@v7
        with:
          script: |
            const summary = `## Terraform Plan Summary for ${{ github.event.inputs.environment }}
            
            <details>
            <summary>Click to see plan changes</summary>
            
            \`\`\`
            ${{ steps.plan_summary.outputs.summary }}
            \`\`\`
            
            </details>
            
            **Plan Status**: Changes detected (exit code: ${{ steps.plan.outputs.exitcode }})
            
            To apply these changes:
            1. Review the plan carefully
            2. Run this workflow again with action="apply"
            `;
            
            github.rest.actions.createWorkflowDispatchEvent({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: 'terraform-deploy.yaml',
              ref: context.ref,
              inputs: {
                environment: '${{ github.event.inputs.environment }}',
                action: 'plan'
              }
            });

  terraform-apply:
    name: Terraform Apply
    runs-on: ubuntu-latest
    if: github.event.inputs.action == 'apply'
    environment: ${{ github.event.inputs.environment }}
    defaults:
      run:
        working-directory: ./signaler/terraform

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Manual Approval Check
        if: github.event.inputs.auto_approve != 'true'
        uses: trstringer/manual-approval@v1
        with:
          secret: ${{ github.TOKEN }}
          approvers: ${{ github.actor }}
          minimum-approvals: 1
          issue-title: "Terraform Apply Approval Required"
          issue-body: |
            ## Terraform Apply Approval Required
            
            **Environment**: ${{ github.event.inputs.environment }}
            **Triggered by**: @${{ github.actor }}
            **Run**: [#${{ github.run_number }}](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})
            
            Please review the terraform plan output from the previous run before approving.
            
            Reply with "approved" to continue with the apply.

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Install OpenTofu
        uses: opentofu/setup-opentofu@v1
        with:
          tofu_version: ${{ env.TOFU_VERSION }}

      - name: Initialize OpenTofu
        run: |
          tofu init -backend-config=backend.conf

      - name: Download Plan
        uses: actions/download-artifact@v4
        with:
          name: tfplan
          path: signaler/terraform

      - name: Terraform Apply
        run: |
          if [ -f tfplan ]; then
            echo "Applying saved plan..."
            tofu apply tfplan
          else
            echo "No saved plan found, running fresh apply..."
            tofu apply -var="project_id=${{ env.GCP_PROJECT_ID }}" -auto-approve=${{ github.event.inputs.auto_approve }}
          fi

      - name: Show Outputs
        run: |
          echo "## Terraform Outputs"
          tofu output -json

  terraform-destroy:
    name: Terraform Destroy
    runs-on: ubuntu-latest
    if: github.event.inputs.action == 'destroy'
    environment: ${{ github.event.inputs.environment }}
    defaults:
      run:
        working-directory: ./signaler/terraform

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Manual Approval Check
        uses: trstringer/manual-approval@v1
        with:
          secret: ${{ github.TOKEN }}
          approvers: ${{ github.actor }}
          minimum-approvals: 1
          issue-title: "⚠️ Terraform DESTROY Approval Required"
          issue-body: |
            ## ⚠️ DANGER: Terraform Destroy Approval Required
            
            **Environment**: ${{ github.event.inputs.environment }}
            **Triggered by**: @${{ github.actor }}
            
            **This will DESTROY all infrastructure in the ${{ github.event.inputs.environment }} environment!**
            
            Reply with "approved" to continue with the destroy operation.

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Install OpenTofu
        uses: opentofu/setup-opentofu@v1
        with:
          tofu_version: ${{ env.TOFU_VERSION }}

      - name: Initialize OpenTofu
        run: |
          tofu init -backend-config=backend.conf

      - name: Terraform Destroy
        run: |
          tofu destroy -var="project_id=${{ env.GCP_PROJECT_ID }}" -auto-approve